{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\sheko\\\\web\\\\react\\\\next 2\\\\pages\\\\[meetupId]\\\\index.js\";\nimport React from \"react\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { MongoClient, ObjectId } from \"mongodb\";\n\nconst MeetupDetails = props => {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    img: props.meetupData.image,\n    title: props.meetupData.title,\n    address: props.meetupData.address,\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect(\"mongodb+srv://shiref:22512201@meetups.ggtgkwh.mongodb.net/?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupCollections = db.collection(\"meetups\");\n  const selectedMeetups = await meetupCollections.findOne({\n    _id: ObjectId(meetupId)\n  });\n  return {\n    props: {\n      meetupData: {\n        id: selectedMeetups._id.toString(),\n        title: selectedMeetups.title,\n        image: selectedMeetups.image,\n        address: selectedMeetups.address,\n        description: selectedMeetups.description\n      }\n    }\n  };\n}\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://shiref:22512201@meetups.ggtgkwh.mongodb.net/?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupCollections = db.collection(\"meetups\");\n  const meetups = await meetupCollections.find({}, {\n    _id: 1\n  }).toArray();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["D:/sheko/web/react/next 2/pages/[meetupId]/index.js"],"names":["React","MeetupDetail","MongoClient","ObjectId","MeetupDetails","props","meetupData","image","title","address","description","getStaticProps","context","meetupId","params","client","connect","db","meetupCollections","collection","selectedMeetups","findOne","_id","id","toString","getStaticPaths","meetups","find","toArray","fallback","paths","map","meetup"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,SAASC,WAAT,EAAqBC,QAArB,QAAqC,SAArC;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/B,sBACE,QAAC,YAAD;AACE,IAAA,GAAG,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KADxB;AAEE,IAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAF1B;AAGE,IAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAH5B;AAIE,IAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJhC;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CATD;;AAWA,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAMC,QAAQ,GAAGD,OAAO,CAACE,MAAR,CAAeD,QAAhC;AACA,QAAME,MAAM,GAAG,MAAMb,WAAW,CAACc,OAAZ,CACnB,wFADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMC,eAAe,GAAG,MAAMF,iBAAiB,CAACG,OAAlB,CAA0B;AAACC,IAAAA,GAAG,EAACnB,QAAQ,CAACU,QAAD;AAAb,GAA1B,CAA9B;AACA,SAAO;AACLR,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAE;AACViB,QAAAA,EAAE,EAACH,eAAe,CAACE,GAAhB,CAAoBE,QAApB,EADO;AAEVhB,QAAAA,KAAK,EAACY,eAAe,CAACZ,KAFZ;AAGVD,QAAAA,KAAK,EAACa,eAAe,CAACb,KAHZ;AAIVE,QAAAA,OAAO,EAACW,eAAe,CAACX,OAJd;AAKVC,QAAAA,WAAW,EAACU,eAAe,CAACV;AALlB;AADP;AADF,GAAP;AAWD;AACD,OAAO,eAAee,cAAf,GAAgC;AACrC,QAAMV,MAAM,GAAG,MAAMb,WAAW,CAACc,OAAZ,CACnB,wFADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMO,OAAO,GAAE,MAAMR,iBAAiB,CAACS,IAAlB,CAAuB,EAAvB,EAA2B;AAAEL,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCM,OAAvC,EAArB;AACA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEJ,OAAO,CAACK,GAAR,CAAaC,MAAD,KAAW;AAAClB,MAAAA,MAAM,EAAC;AAACD,QAAAA,QAAQ,EAACmB,MAAM,CAACV,GAAP,CAAWE,QAAX;AAAV;AAAR,KAAX,CAAZ;AAFF,GAAP;AAID;AACD,eAAepB,aAAf","sourcesContent":["import React from \"react\";\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\nimport { MongoClient,ObjectId } from \"mongodb\";\r\n\r\nconst MeetupDetails = (props) => {\r\n  return (\r\n    <MeetupDetail\r\n      img={props.meetupData.image}\r\n      title={props.meetupData.title}\r\n      address={props.meetupData.address}\r\n      description={props.meetupData.description}\r\n    />\r\n  );\r\n};\r\n\r\nexport async function getStaticProps(context) {\r\n  const meetupId = context.params.meetupId;\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://shiref:22512201@meetups.ggtgkwh.mongodb.net/?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetupCollections = db.collection(\"meetups\");\r\n  const selectedMeetups = await meetupCollections.findOne({_id:ObjectId(meetupId)});\r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        id:selectedMeetups._id.toString(),\r\n        title:selectedMeetups.title,\r\n        image:selectedMeetups.image,\r\n        address:selectedMeetups.address,\r\n        description:selectedMeetups.description\r\n      },\r\n    },\r\n  };\r\n}\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://shiref:22512201@meetups.ggtgkwh.mongodb.net/?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetupCollections = db.collection(\"meetups\");\r\n  const meetups =await meetupCollections.find({}, { _id: 1 }).toArray();\r\n  return {\r\n    fallback: false,\r\n    paths: meetups.map((meetup)=>({params:{meetupId:meetup._id.toString()}}))\r\n  };\r\n}\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}