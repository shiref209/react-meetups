{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\sheko\\\\web\\\\react\\\\next 2\\\\pages\\\\[meetupId]\\\\index.js\",\n    _this = this;\n\nimport React from \"react\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nvar MeetupDetails = function MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    img: props.meetupData.image,\n    title: props.meetupData.title,\n    address: props.meetupData.address,\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["D:/sheko/web/react/next 2/pages/[meetupId]/index.js"],"names":["React","MeetupDetail","MeetupDetails","props","meetupData","image","title","address","description"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAGA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC/B,sBACE,QAAC,YAAD;AACE,IAAA,GAAG,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KADxB;AAEE,IAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAF1B;AAGE,IAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAH5B;AAIE,IAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJhC;AAAA;AAAA;AAAA;AAAA,WADF;AAQD,CATD;;KAAMN,a;;AA2CN,eAAeA,aAAf","sourcesContent":["import React from \"react\";\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\nimport { MongoClient,ObjectId } from \"mongodb\";\r\n\r\nconst MeetupDetails = (props) => {\r\n  return (\r\n    <MeetupDetail\r\n      img={props.meetupData.image}\r\n      title={props.meetupData.title}\r\n      address={props.meetupData.address}\r\n      description={props.meetupData.description}\r\n    />\r\n  );\r\n};\r\n\r\nexport async function getStaticProps(context) {\r\n  const meetupId = context.params.meetupId;\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://shiref:22512201@meetups.ggtgkwh.mongodb.net/?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetupCollections = db.collection(\"meetups\");\r\n  const selectedMeetups = await meetupCollections.findOne({_id:ObjectId(meetupId)});\r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        id:selectedMeetups._id.toString(),\r\n        title:selectedMeetups.title,\r\n        image:selectedMeetups.image,\r\n        address:selectedMeetups.address,\r\n        description:selectedMeetups.description\r\n      },\r\n    },\r\n  };\r\n}\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://shiref:22512201@meetups.ggtgkwh.mongodb.net/?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetupCollections = db.collection(\"meetups\");\r\n  const meetups =await meetupCollections.find({}, { _id: 1 }).toArray();\r\n  return {\r\n    fallback: false,\r\n    paths: meetups.map((meetup)=>({params:{meetupId:meetup._id.toString()}}))\r\n  };\r\n}\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}